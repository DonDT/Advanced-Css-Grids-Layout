.features {
  grid-column: center-start / center-end;
  margin: 15rem 0;

  // Making the feature element a container.
  display: grid;
  // This wouldn't be responsive. auto-fit, creates as many tracks as can fit based on the width that we defined, which was 1120px.
  //grid-template-columns: repeat(3, 1fr);
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));

  grid-gap: 6rem;
  //grid-template-rows: auto auto;
}

.feature {
  display: grid;
  grid-template-columns: min-content 1fr;
  grid-row-gap: 1.5rem;
  grid-column-gap: 2.5rem;
  align-items: start;
  // We don't need to define them, because we want the content to define the rows.

  &__icon {
    fill: $color-primary;
    width: 4.5rem;
    height: 4.5rem;
    // -1 couldn't work here, because we didn't define the rows, so we have an implicit grid.
    grid-row: 1 / span 2;
    // Moving the icon a little bit up.
    transform: translateY(-1rem);
  }
  &__text {
    font-size: 1.7rem;
  }
}
